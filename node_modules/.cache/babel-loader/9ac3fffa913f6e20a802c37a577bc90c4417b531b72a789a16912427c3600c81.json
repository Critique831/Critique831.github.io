{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\School\\\\TNP\\\\react-memorygame\\\\src\\\\challenge\\\\challenge.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './challenge.css';\nimport SingleCard from '../components/SingleCard';\nimport { updateLeaderboard } from '../leaderboardUtils';\nimport ChallengeCompletePopup from './challengeIntermediate';\nimport '../Intermediate.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"img/css.png\",\n  matched: false\n}, {\n  \"src\": \"img/google.png\",\n  matched: false\n}, {\n  \"src\": \"img/html.png\",\n  matched: false\n}, {\n  \"src\": \"img/js.png\",\n  matched: false\n}, {\n  \"src\": \"img/c++.png\",\n  matched: false\n}, {\n  \"src\": \"img/react.png\",\n  matched: false\n}, {\n  \"src\": \"img/aws.png\",\n  matched: false\n}, {\n  \"src\": \"img/win11.png\",\n  matched: false\n}, {\n  \"src\": \"img/vs.png\",\n  matched: false\n}, {\n  \"src\": \"img/python.png\",\n  matched: false\n}];\nfunction ChallengeGame() {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  console.log('Rendering StandardGame component');\n  const navigate = useNavigate();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [card1, setCard1] = useState(null);\n  const [card2, setCard2] = useState(null);\n  const [finished, setFinished] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    shuffle();\n  }, []);\n  useEffect(() => {\n    if (card1 && card2) {\n      setDisabled(true);\n      if (card1.src === card2.src) {\n        setCards(prev => {\n          return prev.map(card => {\n            if (card.src === card1.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [card1, card2]);\n  useEffect(() => {\n    if (cards.length !== 0) {\n      let flag = 0;\n      cards.forEach(card => {\n        if (card.matched) {\n          flag += 1;\n        }\n      });\n      if (flag === cards.length) {\n        setFinished(true);\n      } else {\n        setFinished(false);\n      }\n    }\n  }, [cards]);\n  useEffect(() => {\n    if (finished) {\n      // Show the level completion popup\n      setShowPopup(true);\n    }\n  }, [finished]);\n\n  //shuffle\n  const shuffle = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCard1(null);\n    setCard2(null);\n    setCards(shuffledCards);\n    setTurns(0);\n    setFinished(false);\n  };\n  const handleChoice = card => {\n    if (card1 !== null) {\n      card1.id === card.id ? console.log(\"Multiple clicks\") : setCard2(card);\n    } else {\n      setCard1(card);\n    }\n  };\n  const resetTurn = () => {\n    setCard1(null);\n    setCard2(null);\n    setTurns(prev => prev + 1);\n    setDisabled(false);\n  };\n\n  //Storing good marks to leaderboard\n  useEffect(() => {\n    if (finished) {\n      const level = \"Challenge\";\n      updateLeaderboard(level, turns);\n    }\n  }, [finished, turns]);\n  const handleRestart = () => {\n    // Logic to restart the current level...\n    shuffle(); // Reshuffle cards for the current level\n    setTurns(0); // Reset turns to zero\n    setFinished(false); // Reset finished state\n    setShowPopup(false); // Hide the popup\n  };\n\n  const handleHome = () => {\n    navigate('/');\n    setShowPopup(false); // Hide the popup\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu\",\n        onClick: shuffle,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-gridC\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === card1 || card === card2 || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns: \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(ChallengeCompletePopup, {\n      onRestart: handleRestart,\n      onHome: handleHome,\n      steps: turns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(ChallengeGame, \"xKUOIzCKH73Dxao19FLUr58bnAA=\", false, function () {\n  return [useNavigate];\n});\n_c = ChallengeGame;\nexport default ChallengeGame;\nvar _c;\n$RefreshReg$(_c, \"ChallengeGame\");","map":{"version":3,"names":["useState","useEffect","SingleCard","updateLeaderboard","ChallengeCompletePopup","useNavigate","jsxDEV","_jsxDEV","cardImages","matched","ChallengeGame","_s","showPopup","setShowPopup","console","log","navigate","cards","setCards","turns","setTurns","card1","setCard1","card2","setCard2","finished","setFinished","disabled","setDisabled","shuffle","src","prev","map","card","resetTurn","setTimeout","length","flag","forEach","shuffledCards","sort","Math","random","id","handleChoice","level","handleRestart","handleHome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","onRestart","onHome","steps","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/School/TNP/react-memorygame/src/challenge/challenge.js"],"sourcesContent":["import {useState,useEffect} from 'react';\r\nimport './challenge.css';\r\nimport SingleCard from '../components/SingleCard';\r\nimport { updateLeaderboard } from '../leaderboardUtils';\r\nimport ChallengeCompletePopup from './challengeIntermediate';\r\nimport '../Intermediate.css';\r\nimport {useNavigate } from \"react-router-dom\";\r\n\r\nconst cardImages = [\r\n    {\"src\": \"img/css.png\", matched: false},\r\n    {\"src\": \"img/google.png\", matched: false},\r\n    {\"src\": \"img/html.png\", matched: false},\r\n    {\"src\": \"img/js.png\", matched: false},\r\n    {\"src\": \"img/c++.png\", matched: false},\r\n    {\"src\": \"img/react.png\", matched: false},\r\n    {\"src\": \"img/aws.png\", matched: false},\r\n    {\"src\": \"img/win11.png\", matched: false},\r\n    {\"src\": \"img/vs.png\", matched: false},\r\n    {\"src\": \"img/python.png\", matched: false},\r\n]\r\n\r\nfunction ChallengeGame() {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    console.log('Rendering StandardGame component');\r\n    const navigate = useNavigate();\r\n    const [cards, setCards] = useState([]);\r\n    const [turns, setTurns] = useState(0);\r\n    const [card1, setCard1] = useState(null);\r\n    const [card2, setCard2] = useState(null);\r\n    const [finished, setFinished] = useState(false);\r\n    const [disabled,setDisabled] = useState(false);\r\n    \r\n    useEffect (() => {\r\n        shuffle();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (card1 && card2) {\r\n            setDisabled(true)\r\n            if(card1.src === card2.src){\r\n                setCards(prev => {\r\n                    return prev.map(card => {\r\n                        if(card.src === card1.src){\r\n                            return {...card, matched: true}\r\n                        }else{\r\n                            return card\r\n                        }\r\n                    })\r\n                })\r\n                resetTurn()\r\n            }else{\r\n                setTimeout(() => resetTurn(), 1000)\r\n            }\r\n        }\r\n    },[card1, card2])\r\n\r\n    useEffect(() => {\r\n        if(cards.length !== 0){\r\n            let flag = 0;\r\n            cards.forEach((card) => {\r\n                if (card.matched) {\r\n                    flag += 1 \r\n                } \r\n            });\r\n            if(flag === cards.length){\r\n                setFinished(true)\r\n            }else{\r\n                setFinished(false)\r\n            }\r\n        }\r\n    }, [cards]);\r\n\r\n    useEffect(() => {\r\n        if (finished) {\r\n            // Show the level completion popup\r\n            setShowPopup(true)\r\n          }\r\n    },[finished])\r\n\r\n    //shuffle\r\n    const shuffle = () => {\r\n        const shuffledCards = [...cardImages, ...cardImages]\r\n        .sort(() => Math.random() - 0.5)\r\n        .map((card) => ({...card, id: Math.random()}))\r\n\r\n        setCard1(null)\r\n        setCard2(null)\r\n        setCards(shuffledCards)\r\n        setTurns(0)\r\n        setFinished(false)\r\n    }\r\n\r\n    const handleChoice = (card) => {\r\n        if(card1 !== null) {\r\n            card1.id === card.id ? console.log(\"Multiple clicks\") :setCard2(card)\r\n        } else {\r\n            setCard1(card)\r\n        }\r\n    }\r\n\r\n    const resetTurn = () =>{\r\n        setCard1(null)\r\n        setCard2(null)\r\n        setTurns(prev => prev + 1)\r\n        setDisabled(false)\r\n    }\r\n\r\n    //Storing good marks to leaderboard\r\n    useEffect(() => {\r\n        if (finished) {\r\n          const level = \"Challenge\";\r\n          updateLeaderboard(level, turns);\r\n        }\r\n    }, [finished, turns]);\r\n\r\n    const handleRestart = () => {\r\n        // Logic to restart the current level...\r\n        shuffle(); // Reshuffle cards for the current level\r\n        setTurns(0); // Reset turns to zero\r\n        setFinished(false); // Reset finished state\r\n        setShowPopup(false); // Hide the popup\r\n    }\r\n\r\n    const handleHome = () => {\r\n        navigate('/');\r\n        setShowPopup(false); // Hide the popup\r\n    };\r\n\r\n    return(\r\n        <div className='App'>\r\n            <h1>Memory Game</h1>\r\n            <p>\r\n                <button className='menu' onClick={shuffle}>New Game</button>\r\n            </p>\r\n            <div className='card-gridC'>\r\n                {cards.map(card => (\r\n                    <SingleCard key={card.id} card={card} handleChoice={handleChoice} flipped={card===card1||card===card2||card.matched} disabled={disabled}/>\r\n                ))}\r\n            </div>\r\n            <p>Turns: {turns}</p>\r\n\r\n            {showPopup && (\r\n                <ChallengeCompletePopup\r\n                onRestart={handleRestart}\r\n                onHome={handleHome}\r\n                steps={turns}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeGame;"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,sBAAsB,MAAM,yBAAyB;AAC5D,OAAO,qBAAqB;AAC5B,SAAQC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAG,CACf;EAAC,KAAK,EAAE,aAAa;EAAEC,OAAO,EAAE;AAAK,CAAC,EACtC;EAAC,KAAK,EAAE,gBAAgB;EAAEA,OAAO,EAAE;AAAK,CAAC,EACzC;EAAC,KAAK,EAAE,cAAc;EAAEA,OAAO,EAAE;AAAK,CAAC,EACvC;EAAC,KAAK,EAAE,YAAY;EAAEA,OAAO,EAAE;AAAK,CAAC,EACrC;EAAC,KAAK,EAAE,aAAa;EAAEA,OAAO,EAAE;AAAK,CAAC,EACtC;EAAC,KAAK,EAAE,eAAe;EAAEA,OAAO,EAAE;AAAK,CAAC,EACxC;EAAC,KAAK,EAAE,aAAa;EAAEA,OAAO,EAAE;AAAK,CAAC,EACtC;EAAC,KAAK,EAAE,eAAe;EAAEA,OAAO,EAAE;AAAK,CAAC,EACxC;EAAC,KAAK,EAAE,YAAY;EAAEA,OAAO,EAAE;AAAK,CAAC,EACrC;EAAC,KAAK,EAAE,gBAAgB;EAAEA,OAAO,EAAE;AAAK,CAAC,CAC5C;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjDc,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/C,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC2B,QAAQ,EAACC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAE9CC,SAAS,CAAE,MAAM;IACb4B,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZ,IAAIoB,KAAK,IAAIE,KAAK,EAAE;MAChBK,WAAW,CAAC,IAAI,CAAC;MACjB,IAAGP,KAAK,CAACS,GAAG,KAAKP,KAAK,CAACO,GAAG,EAAC;QACvBZ,QAAQ,CAACa,IAAI,IAAI;UACb,OAAOA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAI;YACpB,IAAGA,IAAI,CAACH,GAAG,KAAKT,KAAK,CAACS,GAAG,EAAC;cACtB,OAAO;gBAAC,GAAGG,IAAI;gBAAExB,OAAO,EAAE;cAAI,CAAC;YACnC,CAAC,MAAI;cACD,OAAOwB,IAAI;YACf;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;QACFC,SAAS,CAAC,CAAC;MACf,CAAC,MAAI;QACDC,UAAU,CAAC,MAAMD,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC;MACvC;IACJ;EACJ,CAAC,EAAC,CAACb,KAAK,EAAEE,KAAK,CAAC,CAAC;EAEjBtB,SAAS,CAAC,MAAM;IACZ,IAAGgB,KAAK,CAACmB,MAAM,KAAK,CAAC,EAAC;MAClB,IAAIC,IAAI,GAAG,CAAC;MACZpB,KAAK,CAACqB,OAAO,CAAEL,IAAI,IAAK;QACpB,IAAIA,IAAI,CAACxB,OAAO,EAAE;UACd4B,IAAI,IAAI,CAAC;QACb;MACJ,CAAC,CAAC;MACF,IAAGA,IAAI,KAAKpB,KAAK,CAACmB,MAAM,EAAC;QACrBV,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,MAAI;QACDA,WAAW,CAAC,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEXhB,SAAS,CAAC,MAAM;IACZ,IAAIwB,QAAQ,EAAE;MACV;MACAZ,YAAY,CAAC,IAAI,CAAC;IACpB;EACN,CAAC,EAAC,CAACY,QAAQ,CAAC,CAAC;;EAEb;EACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAMU,aAAa,GAAG,CAAC,GAAG/B,UAAU,EAAE,GAAGA,UAAU,CAAC,CACnDgC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BV,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEU,EAAE,EAAEF,IAAI,CAACC,MAAM,CAAC;IAAC,CAAC,CAAC,CAAC;IAE9CpB,QAAQ,CAAC,IAAI,CAAC;IACdE,QAAQ,CAAC,IAAI,CAAC;IACdN,QAAQ,CAACqB,aAAa,CAAC;IACvBnB,QAAQ,CAAC,CAAC,CAAC;IACXM,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMkB,YAAY,GAAIX,IAAI,IAAK;IAC3B,IAAGZ,KAAK,KAAK,IAAI,EAAE;MACfA,KAAK,CAACsB,EAAE,KAAKV,IAAI,CAACU,EAAE,GAAG7B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,GAAES,QAAQ,CAACS,IAAI,CAAC;IACzE,CAAC,MAAM;MACHX,QAAQ,CAACW,IAAI,CAAC;IAClB;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAK;IACnBZ,QAAQ,CAAC,IAAI,CAAC;IACdE,QAAQ,CAAC,IAAI,CAAC;IACdJ,QAAQ,CAACW,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC1BH,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACZ,IAAIwB,QAAQ,EAAE;MACZ,MAAMoB,KAAK,GAAG,WAAW;MACzB1C,iBAAiB,CAAC0C,KAAK,EAAE1B,KAAK,CAAC;IACjC;EACJ,CAAC,EAAE,CAACM,QAAQ,EAAEN,KAAK,CAAC,CAAC;EAErB,MAAM2B,aAAa,GAAGA,CAAA,KAAM;IACxB;IACAjB,OAAO,CAAC,CAAC,CAAC,CAAC;IACXT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACbM,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACpBb,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,MAAMkC,UAAU,GAAGA,CAAA,KAAM;IACrB/B,QAAQ,CAAC,GAAG,CAAC;IACbH,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,oBACIN,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB1C,OAAA;MAAA0C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9C,OAAA;MAAA0C,QAAA,eACI1C,OAAA;QAAQyC,SAAS,EAAC,MAAM;QAACM,OAAO,EAAEzB,OAAQ;QAAAoB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACJ9C,OAAA;MAAKyC,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBhC,KAAK,CAACe,GAAG,CAACC,IAAI,iBACX1B,OAAA,CAACL,UAAU;QAAe+B,IAAI,EAAEA,IAAK;QAACW,YAAY,EAAEA,YAAa;QAACW,OAAO,EAAEtB,IAAI,KAAGZ,KAAK,IAAEY,IAAI,KAAGV,KAAK,IAAEU,IAAI,CAACxB,OAAQ;QAACkB,QAAQ,EAAEA;MAAS,GAAvHM,IAAI,CAACU,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiH,CAC5I;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN9C,OAAA;MAAA0C,QAAA,GAAG,SAAO,EAAC9B,KAAK;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpBzC,SAAS,iBACNL,OAAA,CAACH,sBAAsB;MACvBoD,SAAS,EAAEV,aAAc;MACzBW,MAAM,EAAEV,UAAW;MACnBW,KAAK,EAAEvC;IAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC1C,EAAA,CAjIQD,aAAa;EAAA,QAGDL,WAAW;AAAA;AAAAsD,EAAA,GAHvBjD,aAAa;AAmItB,eAAeA,aAAa;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}